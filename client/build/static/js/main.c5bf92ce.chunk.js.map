{"version":3,"sources":["redux/utils/setAuthToken.js","redux/actions/actionTypes.js","redux/baseUrl.js","redux/actions/actionContacts.js","redux/actions/actionUsers.js","redux/actions/actionConversations.js","redux/actions/actionMessages.js","redux/actions/actionAuth.js","components/auth/RegisterComponent.jsx","components/auth/LoginComponent.jsx","components/chat/ChatItem.jsx","components/profile/UserProfile.jsx","components/modals/ContactProfileModalComponent.jsx","Socket.js","components/chat/Chat.jsx","components/modals/NewContactModalComponent.jsx","components/chats_list/ChatsListComponent.jsx","components/modals/PasswordModalComponent.jsx","components/comp_config/DateTime.jsx","components/comp_config/UserRobot.jsx","components/Uploader/DragImage.jsx","services/firebase.js","Hooks/useStorage.js","components/Uploader/LoaderImage.jsx","components/Uploader/Uploader.jsx","components/modals/ConfigurationModalComponent.jsx","components/miniature_profile/MiniatureProfileSummaryComponent.jsx","components/ChatAppComponent.jsx","components/private-route/PrivateRouteComponent.jsx","components/HeaderComponent.jsx","redux/reducers/authReducer.js","redux/reducers/errorReducer.js","redux/reducers/contactsReducer.js","redux/reducers/usersReducer.js","redux/reducers/conversationsReducer.js","redux/reducers/index.js","redux/reducers/messagesReducer.js","redux/store.js","App.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","GET_ERRORS","CLEAN_ERRORS","USER_LOADING","SET_CURRENT_USER","PASSWORD_CHANGED","UPDATE_CONTACTS","CLEAN_CONTACTS","CONTACTS_LOADING","GET_USERS","CLEAN_USERS","CREATE_NEW_CONVERSATION","UPDATE_CONVERSATIONS","UPDATE_FRIEND_CURRENT_CONVERSATION","SET_CURRENT_CONVERSATION","CLEAN_CONVERSATIONS","UPDATE_MESSAGES","AFTER_POST_MESSAGE","CLEAN_MESSAGES","baseUrl","getContacts","id","dispatch","loadingContacts","get","then","res","data","contacts_list","contactsList","updateContacts","catch","err","type","payload","response","getUsers","list","updateUsers","users_list","reportNewConversation","newConversation","getConversations","userId","conversationsList","updateConversations","conversations","getMessagesConversation","conversationId","messagesList","updateMessages","messages","setCurrentUser","decoded","logoutUser","localStorage","removeItem","cleanErrors","Register","onChange","e","setState","target","value","onSubmit","preventDefault","newUser","nickname","state","email","password","password2","props","registerUser","history","errors","nextProps","this","error","swal","auth","isAuthenticated","push","Fragment","className","Form","noValidate","Row","Label","htmlFor","md","Col","Input","placeholder","size","Button","Component","connect","userData","post","withRouter","Login","loginUser","passwordincorrect","emailnotfound","src","alt","FormGroup","to","setItem","jwt_decode","ChatItem","user","msg","format","time","RenderNewChatButton","renderNewChatButton","UserProfile","image","name","phone","href","github","rel","instagram","twitter","linkedin","ContactProfile","Modal","isOpen","isModalOpen","toggle","toggleModal","ModalHeader","ModalBody","ModalFooter","color","onClick","socket","io","IsCurrentConversation","handleSearchChange","submitChatMessage","messageValue","currentConversationID","friendCurrentConversation","currentUser","handleKeyPress","showContactProfile","Object","keys","length","map","itm","sender","text","createdAt","_id","onKeyPress","autoComplete","Chat","currentConversation","emit","contact","isContactProfileModalOpen","bind","toggleContactProfileModal","listeners","on","messageFromBackend","getMessage","charCode","currentConversationFriend","contacts","message","RenderUsersList","prop","usersList","users","sort","a","b","toLowerCase","changeProfile","RightSide","profile","NewContact","addNewContact","contacts_data","id_user","id_contact","addContact","modalClassName","patch","isLoading","class","setFriendConversation","removeContact","ChatList","isNewContactModalOpen","isNewGroupModalOpen","toggleNewContactModal","toggleNewGroupModal","friend","friendId","members","senderId","receiverId","createNewConversation","setCurrentFriendConversation","found","conversation","includes","setCurrentConversation","user_id","savedConversation","PasswordModal","old_password","hasChanged","changePassword","DateTime","useState","Date","TimeCommence","TimeSelectC","TimeFinish","TimeSelectF","utils","DateFnsUtils","TimePicker","UserSetup","isPasswordModalOpen","togglePasswordModal","readOnly","DragImage","setMedia","setLoading","setError","messageError","setMessageError","classDrag","setClassDrag","setImage","file","setFile","typeImages","refInputFile","useRef","isImageValid","showImage","fileReader","FileReader","readAsDataURL","addEventListener","result","useEffect","setTimeout","ref","files","onDragOver","onDragLeave","current","click","onDrop","dataTransfer","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","fbStorage","storage","fbFirestore","firestore","timeStamp","FieldValue","serverTimestamp","useStorage","progress","setProgress","url","setUrl","storageRef","collectionRef","collection","put","snap","percentage","bytesTransferred","totalBytes","getDownloadURL","add","LoaderImage","motion","div","initial","width","animate","Uploader","loading","valueURL","DisplayUserImage","console","log","Configuration","valueUrl","handleName","handleLastName","lastname","handleNickName","handlePhone","handleGithub","handleInstagram","handleTwitter","handleLinkeding","isChangingImage","updateUser","changeProfileImage","claves","i","changeImage","UserRobot","MiniatureProfileSummary","isConfigurationModalOpen","toggleConfigurationtModal","string","charAt","toUpperCase","slice","ChatApp","component","rest","render","ReturnNavElements","logOut","Header","onLogoutClick","isEmpty","require","initialState","combineReducers","action","concat","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","jwtToken","currentTime","now","exp","window","location","App","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5bf92ce.chunk.js","sourcesContent":["import axios from \"axios\"; \n\nconst setAuthToken = token => { \n    if (token) { \n        // Apply authorization token to every request if logged in \n        axios.defaults.headers.common[\"Authorization\"] = token; \n    } \n    else { \n        // Delete auth header \n        delete axios.defaults.headers.common[\"Authorization\"]; \n    } \n}; \nexport default setAuthToken; ","export const GET_ERRORS = \"GET_ERRORS\"; \nexport const CLEAN_ERRORS = \"CLEAN_ERRORS\";\nexport const USER_LOADING = \"USER_LOADING\"; \nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\"; \nexport const UPDATE_CURRENT_USER = \"UPDATE_CURRENT_USER\";\nexport const PASSWORD_CHANGED = \"PASSWORD_CHANGED\";\nexport const UPDATE_CONTACTS = \"UPDATE_CONTACTS\";\nexport const CLEAN_CONTACTS = \"CLEAN_CONTACTS\";\nexport const CONTACTS_LOADING = \"USER_LOADING\";\nexport const REMOVE_CONTACT = \"REMOVE_CONTACT\"; \nexport const GET_USERS = \"GET_USERS\";\nexport const CLEAN_USERS = \"CLEAN_USERS\";\nexport const CREATE_NEW_CONVERSATION = 'CREATE_NEW_CONVERSATION'\nexport const UPDATE_CONVERSATIONS = 'UPDATE_CONVERSATIONS';\nexport const UPDATE_FRIEND_CURRENT_CONVERSATION = \"UPDATE_FRIEND_CURRENT_CONVERSATION\"\nexport const SET_CURRENT_CONVERSATION = 'SET_CURRENT_CONVERSATION';\nexport const CLEAN_CONVERSATIONS = 'CLEAN_CONVERSATIONS';\nexport const UPDATE_MESSAGES = 'GET_MESSAGES';\nexport const AFTER_POST_MESSAGE = 'AFTER_POST_MESSAGE';\nexport const CLEAN_MESSAGES = 'CLEAN_MESSAGES';\n","export const baseUrl = \"http://localhost:5000\";","import axios from \"axios\"; \nimport { baseUrl } from \"../baseUrl\";\nimport { UPDATE_CONTACTS, GET_ERRORS, CONTACTS_LOADING, CLEAN_CONTACTS } from \"./actionTypes\"; \n\n\nexport const getContacts = (id) => (dispatch) => { \n    \n    dispatch(loadingContacts(true));\n\n    axios \n        .get(baseUrl + \"/api/users/get-contacts?id=\"+id) \n        .then((res) => { \n            return res.data.contacts_list\n        }) \n        .then((contactsList) => dispatch(updateContacts(contactsList)))\n        .catch((err) => \n            dispatch({ \n            type: GET_ERRORS, \n            payload: err.response.data, \n            }) \n        ); \n}; \n\n// Update contacts list \nexport const updateContacts = (contactsList) => { \n    return { \n        type: UPDATE_CONTACTS, \n        payload: contactsList, \n    }; \n}; \n\nexport const addContact = (contacts_data) => (dispatch) => {\n\n    axios\n        .patch(baseUrl + '/api/users/add-contact', contacts_data)\n        .then((res) => {\n            dispatch(updateContacts(res.data.contacts_list));\n        })\n}\n\nexport const loadingContacts = () => {\n    return {\n        type: CONTACTS_LOADING\n    }\n}\n\nexport const cleanContacts = () => {\n    return {\n        type: CLEAN_CONTACTS\n    }\n}\n\nexport const removeContact = (data) => (dispatch) => {\n    dispatch(loadingContacts());\n    \n    axios\n        .patch(baseUrl + '/api/users/remove-contact', data)\n        .then((res) => {\n            \n            return res.data.user_id\n        })\n        .then((user_id) => dispatch(getContacts(user_id)))\n        .catch((err) => \n            dispatch({ \n            type: GET_ERRORS, \n            payload: err.response.data, \n            }) \n        ); \n}","import axios from \"axios\"; \nimport { baseUrl } from \"../baseUrl\";\nimport { GET_USERS, GET_ERRORS, CLEAN_USERS } from \"./actionTypes\"; \n\nexport const getUsers = (list) => (dispatch) => {\n    axios \n        .get(baseUrl + \"/api/users/get-users?list=\"+list)\n        .then((res) => {\n            dispatch(updateUsers(res.data.users_list))\n        })\n        .catch((err) => \n            dispatch({ \n            type: GET_ERRORS, \n            payload: err.response.data, \n            }) \n        ); \n}\n\n// Update users list \nexport const updateUsers = (users_list) => { \n    return { \n        type: GET_USERS, \n        payload: users_list, \n    }; \n}; \n\nexport const cleanUsers = () => {\n    return {\n        type: CLEAN_USERS\n    }\n}","import axios from \"axios\"; \nimport { baseUrl } from \"../baseUrl\";\nimport { CREATE_NEW_CONVERSATION, UPDATE_CONVERSATIONS, SET_CURRENT_CONVERSATION, \n    GET_ERRORS, UPDATE_FRIEND_CURRENT_CONVERSATION, CLEAN_CONVERSATIONS} from \"./actionTypes\"; \n\n\n\nexport const createNewConversation = (members) => (dispatch) =>{\n    axios.post(baseUrl +\"/api/conversations/new-conversation\", members) \n    .then((res) => { \n        dispatch(\n            reportNewConversation(res.data.savedConversation._id)\n        )\n        dispatch(\n            updateConversations(res.data.conversations)\n        )\n       \n    }).catch((err) => \n        dispatch({ \n        type: GET_ERRORS, \n        payload: err.response.data, \n        }) \n    );\n}; \n    \nexport const reportNewConversation =(newConversation) =>(dispatch) =>{\n    dispatch({\n        type: CREATE_NEW_CONVERSATION,\n        payload: newConversation\n    })\n}\n\n\nexport const getConversations = (userId) => (dispatch) => { \n   \n    axios.get(baseUrl +\"/api/conversations/get-conversations?userId=\"+ userId) \n        .then((res) => { \n            const conversationsList = res.data; \n            return conversationsList;\n        }) \n \n        .then((conversationsList) => dispatch(updateConversations(conversationsList)))\n        .catch((err) => \n            dispatch({ \n            type: GET_ERRORS, \n            payload: err.response.data, \n            }) \n        )\n};\n    \n\nexport const updateConversations = (conversations) =>{\n    return { \n        type: UPDATE_CONVERSATIONS, \n        payload: conversations, \n    }\n\n};\n\nexport const setCurrentFriendConversation = (friend) => {\n    return{\n        type : UPDATE_FRIEND_CURRENT_CONVERSATION,\n        payload : friend\n    }\n}\n\nexport const setCurrentConversation = (conversationId)=> {\n    return { \n        type: SET_CURRENT_CONVERSATION, \n        payload: conversationId, \n    }\n};\n\nexport const cleanConversations = () => {\n    return {\n        type : CLEAN_CONVERSATIONS\n    }\n}\n\n","import axios from 'axios';\nimport { UPDATE_MESSAGES, AFTER_POST_MESSAGE, GET_ERRORS, CLEAN_MESSAGES } from '../actions/actionTypes';\nimport { baseUrl } from \"../baseUrl\";\n\n\nexport const getMessagesConversation = (conversationId) =>(dispatch)=>{\n    axios.get(baseUrl + '/api/messages/get-messages-conversation?conversationId='+ conversationId)\n    .then((res) => { \n        const messagesList = res.data; \n        return messagesList;\n    }) \n\n    .then((messagesList) => dispatch(updateMessages(messagesList)))\n    .catch((err) => \n        dispatch({ \n        type: GET_ERRORS, \n        payload: err.response.data, \n   \n    })\n    ) \n}; \n\nexport const updateMessages = (messages) =>{\n    return { \n        type: UPDATE_MESSAGES, \n        payload: messages, \n    };\n\n}\n\n\nexport const getMessage = (message) =>{\n        \n    return {\n        type: AFTER_POST_MESSAGE,\n        payload: message\n    }\n}\n\nexport const cleanMessages = () => {\n    return {\n        type: CLEAN_MESSAGES,\n    }\n}","import axios from \"axios\"; \nimport setAuthToken from \"../utils/setAuthToken\"; \nimport jwt_decode from \"jwt-decode\"; \nimport { GET_ERRORS, CLEAN_ERRORS, SET_CURRENT_USER, USER_LOADING, PASSWORD_CHANGED } from \"./actionTypes\"; \nimport { baseUrl } from \"../baseUrl\";\nimport { cleanContacts } from './actionContacts'\nimport { cleanUsers } from \"./actionUsers\";\nimport { cleanConversations } from \"./actionConversations\";\nimport { cleanMessages } from \"./actionMessages\";\n\n// Register User \nexport const registerUser = (userData, history) => (dispatch) => { \n\n    axios \n        .post(baseUrl + \"/api/users/register/\", userData) \n        .then((res) => history.push(\"/sign-in\")) // re-direct to login on successful register \n        .catch((err) => \n            dispatch({ \n                type: GET_ERRORS, \n                payload: err.response.data, \n            }) \n        ); \n}; \n\n// Login - get user token \nexport const loginUser = (userData) => (dispatch) => { \n    axios \n        .post(baseUrl + \"/api/users/login\", userData) \n        .then((res) => { \n            // Save to localStorage \n            // Set token to localStorage \n            const { token } = res.data; \n            localStorage.setItem(\"jwtToken\", token); \n            // Set token to Auth header \n            setAuthToken(token); \n            // Decode token to get user data \n            const decoded = jwt_decode(token); \n            // Set current user \n            dispatch(setCurrentUser(decoded));\n        })\n        .catch((err) => \n            dispatch({ \n            type: GET_ERRORS, \n            payload: err.response.data, \n            }) \n        ); \n}; \n\n// Set logged in user \nexport const setCurrentUser = (decoded) => { \n    return { \n        type: SET_CURRENT_USER, \n        payload: decoded, \n    }; \n}; \n\n// User loading \nexport const setUserLoading = () => { \n    return { \n        type: USER_LOADING, \n    }; \n}; \n\n// Log user out \nexport const logoutUser = () => (dispatch) => { \n    // Remove token from local storage \n    localStorage.removeItem(\"jwtToken\"); \n    // Remove auth header for future requests \n    setAuthToken(false); \n    // Set current user to empty object {} which will set isAuthenticated to false \n    dispatch(setCurrentUser({}));\n    dispatch(cleanContacts());\n    dispatch(cleanUsers());\n    dispatch(cleanConversations());\n    dispatch(cleanMessages());\n};\n\nexport const cleanErrors = () => { \n    return { \n        type: CLEAN_ERRORS, \n    }; \n}; \n\nexport const updateUser = (userData) => (dispatch) => {\n    axios \n        .post(baseUrl + \"/api/users/update-user\", userData) \n        .then((res) => { \n            // Save to localStorage \n            // Set token to localStorage \n            const { token } = res.data; \n            localStorage.setItem(\"jwtToken\", token); \n            // Set token to Auth header \n            setAuthToken(token); \n            // Decode token to get user data \n            const decoded = jwt_decode(token); \n            // Set current user \n            dispatch(setCurrentUser(decoded));\n        })\n        .catch((err) => \n            dispatch({ \n            type: GET_ERRORS, \n            payload: err.response.data, \n            }) \n        ); \n}\n\nexport const changePassword = (data) => (dispatch) => {\n    axios \n        .patch(baseUrl + \"/api/users/change-password\", data) \n        .then(() => { \n            dispatch({\n                type: PASSWORD_CHANGED\n            })\n        })\n        .catch((err) => \n            dispatch({ \n            type: GET_ERRORS, \n            payload: err.response.data, \n            }) \n        ); \n}\n\nexport const changeImage = (data) => (dispatch) => {\n    axios \n        .patch(baseUrl + \"/api/users/add-image\", data) \n        .then((res) => { \n            dispatch({\n                type: SET_CURRENT_USER,\n                payload : res.data\n            })\n        })\n        .catch((err) => \n            dispatch({ \n            type: GET_ERRORS, \n            payload: err.response.data, \n            }) \n        ); \n}","import React, { Component } from \"react\";\nimport { Label, Col, Row, Button, Form, Input } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\"; \nimport { withRouter } from 'react-router-dom';\nimport { registerUser } from \"../../redux/actions/actionAuth\";\nimport swal from 'sweetalert';\n\n\nfunction cleanErrorsForDisplay(props){\n\tif (props.nickname){\n\t\treturn props.nickname\n\t}\n\telse if (props.email){\n\t\treturn props.email\n\t}\n\telse if (props.password){\n\t\treturn props.password\n\t}\n\telse if (props.password2){\n\t\treturn props.password2\n\t}\n}\n\n\nclass Register extends Component {\n\n\tconstructor(){\n        super();\n\t\tthis.state = {\n\t\t\tnickname: \"\", \n\t\t\temail: \"\", \n\t\t\tpassword: \"\", \n\t\t\tpassword2: \"\", \n\t\t\terrors: {}\n\t\t}\n    }\n\n\tcomponentWillReceiveProps(nextProps) { \n\t\tif (nextProps.errors) { \n\t\t\tthis.setState({ \n\t\t\t\terrors: nextProps.errors, \n\t\t\t}); \n\t\t\tvar error = cleanErrorsForDisplay(nextProps.errors)\n\t\t\tswal(\"Error!\", error, \"error\");\n\t\t} \n\t} \n\n\tcomponentDidMount() { \n\t\t// If logged in and user navigates to Login page, should redirect them to app \n\t\tif (this.props.auth.isAuthenticated) { \n\t\t  this.props.history.push(\"/temp\"); \n\t\t} \n\t}\n\n\tonChange = e => { \n\t\tthis.setState({ [e.target.id]: e.target.value }); \n\t};\n\n\tonSubmit = e => {\n\t\te.preventDefault();\n\t\tconst newUser = {\n\t\t\tnickname: this.state.nickname, \n\t\t\temail: this.state.email, \n\t\t\tpassword: this.state.password, \n\t\t\tpassword2: this.state.password2\n\t\t};\n\t\tthis.props.registerUser(newUser, this.props.history);\n\t}\n\n\trender(){\n\t\tconst { errors } = this.state;\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className=\"container-login100\">\n\t\t\t\t\t<div className=\"wrap-login101\">\n\t\t\t\t\t\t<span className=\"login100-form-title\">\n\t\t\t\t\t\t\tStandar Form\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t{/*<div class=\"flexButton-container\">\n\t\t\t\t\t\t\t<Link className=\"login101-form-btn\" to={\"/singUpBussness\"}>\tBusieness</Link>\n\t\t\t\t\t\t</div>*/}\n\t\t\t\t\t\t<Form className=\"login100-form\" noValidate onSubmit={this.onSubmit}>\n\t\t\t\t\t\t\t<Row className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label htmlFor=\"firstname\" md={12}>Nickname</Label>\n\t\t\t\t\t\t\t\t<Col md={12} className=\"wrap-input100\">\n\t\t\t\t\t\t\t\t\t<Input id=\"nickname\"\n\t\t\t\t\t\t\t\t\t\tonChange={this.onChange} \n\t\t\t\t\t\t\t\t\t\tvalue={this.state.nickname} \n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Nickname\" \n\t\t\t\t\t\t\t\t\t\tclassName=\"input100\" \n\t\t\t\t\t\t\t\t\t\terror={errors.nickname}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<span className=\"focus-input100\"></span>\n\t\t\t\t\t\t\t\t\t<span className=\"symbol-input100\">\n\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-id-card\"></i>\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label htmlFor=\"firstname\" md={12}>Email</Label>\n\t\t\t\t\t\t\t\t<Col md={12} className=\"wrap-input100\">\n\t\t\t\t\t\t\t\t\t<Input id=\"email\"\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Email\" \n\t\t\t\t\t\t\t\t\t\tclassName=\"input100\" \n\t\t\t\t\t\t\t\t\t\tonChange={this.onChange} \n\t\t\t\t\t\t\t\t\t\tvalue={this.state.email} \n\t\t\t\t\t\t\t\t\t\terror={errors.email}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<span className=\"focus-input100\"></span>\n\t\t\t\t\t\t\t\t\t<span className=\"symbol-input100\">\n\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-envelope\"></i>\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label htmlFor=\"firstname\" md={12}>Password</Label>\n\t\t\t\t\t\t\t\t<Col md={12} className=\"wrap-input100\">\n\t\t\t\t\t\t\t\t\t<Input type=\"password\" id=\"password\" \n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Password\" \n\t\t\t\t\t\t\t\t\t\tclassName=\"input100\" \n\t\t\t\t\t\t\t\t\t\tonChange={this.onChange} \n\t\t\t\t\t\t\t\t\t\tvalue={this.state.password} \n\t\t\t\t\t\t\t\t\t\terror={errors.password}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<span className=\"focus-input100\"></span>\n\t\t\t\t\t\t\t\t\t<span className=\"symbol-input100\">\n\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-lock\"></i>\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label htmlFor=\"firstname\" md={12}>Confirm Password</Label>\n\t\t\t\t\t\t\t\t<Col md={12} className=\"wrap-input100\">\n\t\t\t\t\t\t\t\t\t<Input type=\"password\" id=\"password2\" \n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Confirm Password\" \n\t\t\t\t\t\t\t\t\t\tclassName=\"input100\" \n\t\t\t\t\t\t\t\t\t\tonChange={this.onChange} \n\t\t\t\t\t\t\t\t\t\tvalue={this.state.password2} \n\t\t\t\t\t\t\t\t\t\terror={errors.password2}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<span className=\"focus-input100\"></span>\n\t\t\t\t\t\t\t\t\t<span className=\"symbol-input100\">\n\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-lock\"></i>\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row className=\"form-group\">\n                                <Col md={{size:10}} className=\"container-login100-form-btn\">\n                                    <Button type=\"submit\" className=\"login100-form-btn\">Sign Up</Button>\n                                </Col>\n                            </Row>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}\n\nRegister.propTypes = { \n\tregisterUser: PropTypes.func.isRequired, \n\tauth: PropTypes.object.isRequired, \n\terrors: PropTypes.object.isRequired, \n};\n\nconst mapStateToProps = state => ({ \n\tauth: state.auth, \n\terrors: state.errors \n});\n\nexport default connect(mapStateToProps, { registerUser } )(withRouter(Register)); ","import React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\"; \nimport { Col, Row, Button, Form, FormGroup, Input } from 'reactstrap';\nimport { loginUser } from \"../../redux/actions/actionAuth\";\nimport { cleanErrors } from \"../../redux/actions/actionAuth\";\nimport { withRouter } from 'react-router-dom';\nimport { getContacts } from '../../redux/actions/actionContacts';\n\nfunction cleanErrorsForDisplay(props){\n\tif (props.email){\n\t\treturn props.email\n\t}\n\telse if (props.password){\n\t\treturn props.password\n\t}\n\telse if (props.passwordincorrect){\n\t\treturn props.passwordincorrect\n\t}\n\telse if (props.emailnotfound){\n\t\treturn props.emailnotfound\n\t}\n}\n\n\nclass Login extends Component {\n\n\tconstructor(){\n        super();\n\t\tthis.state = {\n\t\t\temail: \"\", \n\t\t\tpassword: \"\", \n\t\t\terrors: {}\n\t\t}\n    }\n\n\tcomponentWillReceiveProps(nextProps) { \n\t\tif (nextProps.auth.isAuthenticated) { \n\t\t\tthis.props.cleanErrors();\n\t\t\tthis.props.history.push(\"/app\"); // push user to dashboard when they login */\n\t  \t} \n\t  \telse if (nextProps.errors) { \n\t\t\tthis.setState({ \n\t\t\t\terrors: nextProps.errors, \n\t\t\t}); \n\t\t\tvar error = cleanErrorsForDisplay(nextProps.errors)\n\t\t\tswal(\"Error!\", error, \"error\");\n\t  \t} \n\t}\n\n\tcomponentDidMount() { \n\t\t// If logged in and user navigates to Login page, should redirect them to app \n\t\tif (this.props.auth.isAuthenticated) { \n\t\t  this.props.history.push(\"/app\"); \n\t\t} \n\t}\n\n\tonChange = e => { \n\t\tthis.setState({ [e.target.id]: e.target.value }); \n\t};\n\n\tonSubmit = e => {\n\t\te.preventDefault();\n\t\tconst userData = {\n\t\t\temail: this.state.email, \n\t\t\tpassword: this.state.password, \n\t\t};\n\t\tthis.props.loginUser(userData); \n\t}\n\n    render() {\n\t\tconst { errors } = this.state;\n        return (\n            <React.Fragment>\n\t\t\t<div className=\"container-login100\">\n            \t<div className=\"wrap-login100\">\n\t\t\t\t\t<div className=\"login100-pic js-tilt\" data-tilt>\n\t\t\t\t\t\t<img src=\"images/login.png\" alt=\"IMG\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<Form className=\"login100-form\" noValidate onSubmit={this.onSubmit}>\n\t\t\t\t\t\t<Row className=\"form-group\">\n\t\t\t\t\t\t\t<Col md={12} className=\"wrap-input100\">\n\t\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t\t<Input id=\"email\"\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Email\" \n\t\t\t\t\t\t\t\t\t\tclassName=\"input100\" \n\t\t\t\t\t\t\t\t\t\tonChange={this.onChange} \n\t\t\t\t\t\t\t\t\t\tvalue={this.state.email} \n\t\t\t\t\t\t\t\t\t\terror={errors.email}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<span className=\"focus-input100\"></span>\n\t\t\t\t\t\t\t\t\t<span className=\"symbol-input100\">\n\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-envelope\"></i>\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row className=\"form-group\">\n\t\t\t\t\t\t\t<Col md={12} className=\"wrap-input100\">\n\t\t\t\t\t\t\t\t<Input type=\"password\" id=\"password\" \n\t\t\t\t\t\t\t\t\tplaceholder=\"Password\" \n\t\t\t\t\t\t\t\t\tclassName=\"input100\" \n\t\t\t\t\t\t\t\t\tonChange={this.onChange} \n\t\t\t\t\t\t\t\t\tvalue={this.state.password} \n\t\t\t\t\t\t\t\t\terror={errors.password}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<span className=\"focus-input100\"></span>\n\t\t\t\t\t\t\t\t<span className=\"symbol-input100\">\n\t\t\t\t\t\t\t\t\t<i className=\"fa fa-lock\"></i>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row className=\"form-group\">\n\t\t\t\t\t\t\t<Col md={{size:10}} className=\"container-login100-form-btn\">\n\t\t\t\t\t\t\t\t<Button type=\"submit\" className=\"login100-form-btn\">Sign In</Button>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<div className=\"text-center pt-5\">\n\t\t\t\t\t\t\t<Link className=\"txt2\" to=\"/sign-up\">\n\t\t\t\t\t\t\t\tSign up\n\t\t\t\t\t\t\t\t<i className=\"fa fa-long-arrow-right m-l-5\" aria-hidden=\"true\"></i>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Form>\n\t\t\t\t</div>\n\t\t\t</div>\n        </React.Fragment>\n        );\n    }\n}\n\nLogin.propTypes = { \n\tloginUser: PropTypes.func.isRequired, \n\tauth: PropTypes.object.isRequired, \n\terrors: PropTypes.object.isRequired, \n};\n\nconst mapStateToProps = (state) => ({ auth: state.auth, errors: state.errors }); \n\nexport default connect(mapStateToProps, { loginUser, cleanErrors, getContacts })(withRouter(Login));","import React, { Component } from \"react\";\r\nimport {format} from 'timeago.js'\r\n\r\n\r\nexport default class ChatItem extends Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className={`chat__item ${this.props.user ? '' : 'other'}`}\r\n      >\r\n        <div className={`chat__item__content ${this.props.user ? '' : 'other'}`}>\r\n          <div className=\"chat__msg\">{this.props.msg}</div>\r\n          <div className=\"chat__meta\">\r\n            <span>{format(this.props.time)}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport './UserProfile.css'\r\n\r\nfunction RenderNewChatButton(props){\r\n  if (props.renderNewChatButton){\r\n    return(\r\n      <div className=\"button-new-chat\" id=\"newChat\">\r\n          <button>\r\n            New chat\r\n          </button>\r\n      </div>   \r\n    )\r\n  }\r\n  else{\r\n    return(\"\")\r\n  }\r\n}\r\n\r\n\r\nclass UserProfile extends Component {\r\n  \r\n  render() {\r\n    return(\r\n      <React.Fragment>\r\n          <div className=\"row\">\r\n            <div className=\"col img-title\"> \r\n                <img src={this.props.user.image !== '' ? this.props.user.image : 'images/profile_dummy.png'} alt=\"user\" \r\n                  className=\"img-fluid mt-5\"/>\r\n                <hr /> \r\n            </div>\r\n          </div>\r\n          <div className= \"row\">\r\n          <div className=\"col\">\r\n                <div className=\"info\">\r\n                    <div className=\"card-body\">\r\n                      <div className=\"info_data row\">\r\n                          <div className=\"data col-md-3\">\r\n                              <h6>Full Name</h6>\r\n                          </div>\r\n                          <div className=\"data col-md-9 text-seconday\">\r\n                            <p>{this.props.user.name}</p>\r\n                          </div>\r\n                      </div>\r\n                    </div>\r\n      \r\n                    <hr></hr>\r\n      \r\n                    <div className=\"card-body\">\r\n                      <div className=\"info_data row\">\r\n                          <div className=\"data col-md-3\">\r\n                              <h6>Nickname</h6>\r\n                          </div>\r\n                          <div className=\"data col-md-9 text-seconday\">\r\n                            <p>{this.props.user.nickname}</p>\r\n                          </div>\r\n                      </div>\r\n                    </div>\r\n      \r\n                    <hr />\r\n      \r\n                    <div className=\"card-body\">\r\n                      <div className=\"info_data row\">\r\n                          <div className=\"data col-md-3\">\r\n                              <h6>Phone</h6>\r\n                          </div>\r\n                          <div className=\"data col-md-9 text-seconday\">\r\n                            <p>{this.props.user.phone}</p>\r\n                          </div>\r\n                      </div>\r\n                    </div>\r\n      \r\n                    <hr />\r\n      \r\n                    <div className=\"card-body\">\r\n                      <div className=\"info_data row\">\r\n                          <div className=\"data col-md-3\">\r\n                              <h6>Email</h6>\r\n                          </div>\r\n                          <div className=\"data col-md-9 text-seconday\">\r\n                            <p>{this.props.user.email}</p>\r\n                          </div>\r\n                      </div>\r\n                    </div>\r\n                    <hr />  \r\n                    </div>\r\n                </div>\r\n                <div className=\"social_media\">\r\n                  <a href={this.props.user.github} target=\"_blank\" rel=\"noreferrer\"\r\n                    className=\"ml-2\">\r\n                    <span className=\"fa-stack fa-lg\">\r\n                        <i className=\"fa fa-circle fa-button fa-stack-2x\"></i>\r\n                        <i className=\"fa fa-github fa-stack-1x fa-inverse\"></i>\r\n                    </span>\r\n                  </a>\r\n                  <a href={this.props.user.instagram} target=\"_blank\" rel=\"noreferrer\"\r\n                    className=\"ml-1 \">\r\n                    <span className=\"fa-stack fa-lg\">\r\n                        <i className=\"fa fa-circle fa-button fa-stack-2x\"></i>\r\n                        <i className=\"fa fa-instagram fa-stack-1x fa-inverse\"></i>\r\n                    </span>\r\n                  </a>\r\n                  <a href={this.props.user.twitter} target=\"_blank\" rel=\"noreferrer\"\r\n                      className=\"ml-1\">\r\n                      <span className=\"fa-stack fa-lg\">\r\n                          <i className=\"fa fa-circle fa-button fa-stack-2x\"></i>\r\n                          <i className=\"fa fa-twitter fa-stack-1x fa-inverse\"></i>\r\n                      </span>\r\n                  </a>\r\n                  <a href={this.props.user.linkedin} target=\"_blank\" rel=\"noreferrer\"\r\n                      className=\"ml-1\">\r\n                      <span className=\"fa-stack fa-lg\">\r\n                          <i className=\"fa fa-circle fa-button fa-stack-2x\"></i>\r\n                          <i className=\"fa fa-linkedin fa-stack-1x fa-inverse\"></i>\r\n                      </span>\r\n                  </a>\r\n                </div>\r\n                <RenderNewChatButton renderNewChatButton={this.props.renderNewChatButton} />\r\n          </div>\r\n      </React.Fragment>\r\n    );\r\n   \r\n    \r\n  }\r\n}\r\n\r\nexport default UserProfile;","import React, { Component } from 'react'\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport UserProfile from '../profile/UserProfile'\n\n\nfunction ContactProfile(props){\n\n    if (props.user !== null){\n        return (\n            <Modal isOpen={props.isModalOpen} toggle={props.toggleModal} size='lg'>\n                <ModalHeader>{props.user.nickname} Profile</ModalHeader>\n                <ModalBody>\n                    <div className='container scroll-modal'>\n                        <div  className=\"row text-center\"> \n                            <UserProfile user={props.user}/>\n                        </div>\n                    </div>\n                </ModalBody>\n                <ModalFooter>\n                    <Button color=\"secondary\" onClick={props.toggleModal}>Cancel</Button>\n                </ModalFooter>\n            </Modal>\n        )\n    }   \n    else{\n        return \"\"\n    }\n}\n\nexport default ContactProfile;\n","import { io } from \"socket.io-client\";\nconst URL = \"http://localhost:5000\";\nconst socket = io(URL);\n\nexport default socket;","import React, { Component } from \"react\";\nimport ChatItem from \"./ChatItem\";\nimport ContactProfile from \"../modals/ContactProfileModalComponent\";\nimport './chatContent.css'\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\"; \nimport { withRouter } from 'react-router-dom';\nimport {getConversations} from '../../redux/actions/actionConversations'\nimport { getMessage, getMessagesConversation} from '../../redux/actions/actionMessages'\nimport socket from '../../Socket'\n\n\nfunction IsCurrentConversation({handleSearchChange, submitChatMessage, messageValue, currentConversationID,  \n  friendCurrentConversation, currentUser, messages, handleKeyPress, showContactProfile }){\n  if(currentConversationID!== null && friendCurrentConversation !== null){\n        \n    return(\n      <div className=\"main__chatcontent\">\n      <div className=\"content__header\">\n          <div className=\"current-chatting-user\">\n            <img src={friendCurrentConversation.image !== '' ? friendCurrentConversation.image : 'images/profile_dummy.png'} className='miniature-profile-image'  alt=\"profile img\" \n                onClick={showContactProfile}/>              \n            <p>{friendCurrentConversation.nickname}</p>\n          </div>\n      </div>\n      <div className=\"content__body mt-3\">\n        <div className=\"chat__items\">\n          { Object.keys(messages).length === 0 ? 'Send a message':\n          messages.messages.map((itm) => {\n            return (\n              <ChatItem\n                key={itm._id}\n                user={itm.sender === currentUser ? \"me\" : \"\"}\n                msg={itm.text}\n                time={itm.createdAt}\n              />\n            );\n          })}\n        </div>\n      </div>\n      <div className=\"content__footer\">\n        <div className=\"sendNewMessage\">\n          <input\n            type=\"text\"\n            placeholder=\"Type a message here\"\n            id= \"input-conversation\"\n            value= {messageValue}\n            onChange={handleSearchChange}\n            onKeyPress={handleKeyPress}\n            className=\"border\"\n            autoComplete=\"off\"\n          />\n          <button className=\"btnSendMsg\" id=\"sendMsgBtn\" onClick={submitChatMessage}>\n            <i className=\"fa fa-paper-plane\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n    );\n  }else{\n    return (\n      <div className='contenedor'>\n        <span className=\"message-no-open-chat\">Open a conversation to start a chat</span>\n        <img src='images/withOutChat.png' className='image_witout' alt=''/>\n      </div> \n      );\n  }\n}\n\nexport class Chat extends Component {\n  \n  constructor(props){\n    super(props)\n    this.state = {\n      messageValue: \"\",\n      messages: [],\n      contact : null,\n      isContactProfileModalOpen: false,\n    }\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.submitChatMessage = this.submitChatMessage.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.toggleContactProfileModal = this.toggleContactProfileModal.bind(this);\n  }\n   \n\n  componentDidMount(){\n    this.props.getMessagesConversation(this.props.conversations.currentConversation)\n    if (socket.listeners('Output Chat Message').length === 0){\n      socket.on('Output Chat Message', messageFromBackend =>{\n        this.props.getMessage(messageFromBackend)\n      })\n    }\n  }\n\n  toggleContactProfileModal(){\n    this.setState({\n      isContactProfileModalOpen: !this.state.isContactProfileModalOpen\n    });\n  }\n\n  componentWillReceiveProps(nextProps){\n    if (this.props.conversations.currentConversation !== nextProps.conversations.currentConversation){\n      this.props.getMessagesConversation(nextProps.conversations.currentConversation)\n    }\n  }\n\n  handleSearchChange = (e) =>{\n    this.setState({\n      messageValue: e.target.value\n    })\n  }\n\n  handleKeyPress(e){\n    if (e.charCode === 13) {\n      this.submitChatMessage()\n    }\n  }\n\n  submitChatMessage=()=>{\n\n    let text = this.state.messageValue\n    let sender= this.props.auth.user.id;\n    let conversationId = this.props.conversations.currentConversation\n    if (text !== ''){\n      socket.emit('Input Chat Message', {\n        conversationId,\n        text,\n        sender,\n        \n      })\n      this.setState({messageValue: \"\"})\n    }\n  }\n\n\n  render() {\n    return (\n      <React.Fragment>\n        <ContactProfile isModalOpen={this.state.isContactProfileModalOpen} toggleModal={this.toggleContactProfileModal} \n          user={this.props.conversations.currentConversationFriend}/>\n        <IsCurrentConversation\n          currentConversationID = {this.props.conversations.currentConversation}\n          friendCurrentConversation={this.props.conversations.currentConversationFriend}\n          currentUser={this.props.auth.user.id}\n          messageValue={this.state.messageValue}\n          handleSearchChange={this.handleSearchChange}\n          submitChatMessage={this.submitChatMessage}\n          messages={this.props.messages}\n          handleKeyPress={this.handleKeyPress}\n          showContactProfile={this.toggleContactProfileModal}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nChat.propTypes = { \n\tauth: PropTypes.object.isRequired, \n\terrors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({ \n  auth: state.auth, \n  errors: state.errors, \n  contacts: state.contacts, \n  messages:state.messages, \n  conversations: state.conversations\n}); \n\nexport default connect(mapStateToProps, {getMessagesConversation, getMessage, getConversations})(withRouter(Chat)); \n\n","import React, { Component } from 'react'\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport UserProfile from '../profile/UserProfile'\nimport { connect } from \"react-redux\"; \nimport { withRouter } from 'react-router-dom';\nimport { getUsers } from '../../redux/actions/actionUsers';\nimport { addContact } from '../../redux/actions/actionContacts';\nimport swal from 'sweetalert';\n\nfunction GetSortOrder(prop) {    \n    return function(a, b) {    \n        if (a[prop].toLowerCase() > b[prop].toLowerCase()) {    \n            return 1;    \n        } else if (a[prop].toLowerCase() < b[prop].toLowerCase()) {    \n            return -1;    \n        }    \n        return 0;    \n    }    \n}    \n\nfunction RenderUsersList(props){\n\n    const usersList = props.users.sort(GetSortOrder('nickname')).map((user) =>{\n        return(\n            <li className=\"list-group-item\"\n            key={user.id} onClick={() => props.changeProfile(user)}>\n                <div className=\"row\">\n                        <div className=\"col-2\">\n                            <img src={user.image !== '' ? user.image : 'images/profile_dummy.png'} className=\"img-fluid chat-list-miniature\" id=\"fotoGrupo\" alt=\"logo\" />\n                        </div>\n                        <div className=\"col-10\">\n                            {user.nickname}\n                        </div>\n                    </div>\n            </li>\n        );\n    });\n\n    return(\n        <div className=\"d-flex scroll-users-list border\">\n            <ul className=\"list-group border\">\n                {usersList}\n            </ul>\n        </div>\n        \n    );\n}\n\nfunction RightSide({profile}){\n    if (profile == null){\n        return(\n            <img src=\"images/iconoFoto.png\" className=\"img-fluid\" id=\"fotoGrupo\" alt=\"logo\" />\n        );\n    }\n    else{\n        return(\n            <UserProfile user={profile} renderNewChatButton={false}/>\n        );\n    }\n};\n\nclass NewContact extends Component{\n\n    constructor(props){\n        super(props)\n        this.state = {\n          profile : null,\n        }\n        this.changeProfile = this.changeProfile.bind(this);\n        this.addNewContact = this.addNewContact.bind(this);\n    }\n\n    changeProfile(user){\n        this.setState({\n            profile : user \n        })\n    }\n\n    addNewContact(){\n        if (this.state.profile == null){\n            swal(\"Error!\", 'You have to select an user!', \"error\");\n        }\n        else{\n            const contacts_data = {\n                id_user : this.props.auth.user.id,\n                id_contact : this.state.profile.id,\n                contacts_list : this.props.contacts.contacts\n            }\n            this.props.addContact(contacts_data);\n            this.setState({\n                profile : null\n            })\n        };\n        this.props.toggleModal()\n    }\n\n    render(){\n        return (\n            <Modal isOpen={this.props.isModalOpen} toggle={this.props.toggleModal} size='lg'>\n                <ModalHeader modalClassName=\"modal-header\">New Contact</ModalHeader>\n                <ModalBody>\n                    <div className='container scroll-modal'>\n                        <div className=\"row\">\n                            {/* Parte izquierda: barra de búsqueda de contactos */}\n                            <div className=\"col-5 mt-5\">\n                                {/*<input type=\"text\" id=\"myInput\"\n                                placeholder=\"Contact name...\" title=\"Type in a name\" \n                                className=\"form-control mb-1\"/>*/}\n                                <RenderUsersList users={this.props.users} changeProfile={this.changeProfile} />\n                            </div>\n                    \n                            {/* Parte derecha: Configuraciones de grupo    */}\n                            <div  className=\"col-7 text-center\"> \n                                <RightSide profile={this.state.profile} />\n                            </div>\n                        </div>\n                    </div>\n                </ModalBody>\n                <ModalFooter>\n                    <Button color=\"primary\" onClick={this.addNewContact}>Add Contact</Button>\n                    <Button color=\"secondary\" onClick={this.props.toggleModal}>Cancel</Button>\n                </ModalFooter>\n            </Modal>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({ auth: state.auth, errors: state.errors, contacts: state.contacts, users: state.users }); \n\nexport default connect(mapStateToProps, { getUsers, addContact })(withRouter(NewContact)); \n","import React, { Component } from \"react\";\nimport NewContact from '../modals/NewContactModalComponent'\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\"; \nimport { withRouter } from 'react-router-dom';\nimport { getContacts, removeContact } from '../../redux/actions/actionContacts';\nimport { getUsers } from '../../redux/actions/actionUsers';\nimport {getConversations, setCurrentConversation, createNewConversation,\n    setCurrentFriendConversation} from '../../redux/actions/actionConversations'\nimport { getMessagesConversation} from '../../redux/actions/actionMessages'\n\nfunction GetSortOrder(prop) {    \n    return function(a, b) {    \n        if (a[prop] > b[prop]) {    \n            return 1;    \n        } else if (a[prop] < b[prop]) {    \n            return -1;    \n        }    \n        return 0;    \n    }    \n} \n\nfunction RenderUsersList(props){\n\n    if (props.contacts.isLoading){\n        return(\n            <div className=\"col-12\">\n                <img src=\"images/ghost.gif\" alt=\"searching...\" className=\"img-fluid rounded mx-auto d-block mt-5\"/>\n            </div>\n            \n        )\n    }\n    else {\n        if (props.contacts.contacts.length === 0){\n            return(\n                <div class=\"col-12 text-center\">\n                    <p>Add friends to star chatting!</p>\n                    <img src='images/add-friend.png' className=\"img-fluid no-chat-image\" id=\"fotoGrupo\" alt=\"logo\" />\n                </div>\n            )\n        }\n        else{\n            const contactsList = props.contacts.contacts.sort(GetSortOrder('nickname')).map((contact) => {\n                return(\n                    <li className=\"list-group-item\" key={contact.id} id={contact.id}>\n                        <div className=\"row\">\n                            <div className=\"col-2\">\n                                <img src={contact.image != '' ? contact.image : 'images/profile_dummy.png'} className=\"img-fluid chat-list-miniature\" id=\"fotoGrupo\" alt=\"logo\" />\n                            </div>\n                            <div className=\"col-8\" onClick={()=>props.setFriendConversation(contact)}>\n                                {contact.nickname}\n                            </div>\n                            <div className=\"col-2\" onClick={() => props.removeContact(contact.id)}>\n                                <i className=\"fa fa-user-times\"></i>\n                            </div>\n                        </div>\n                    </li>\n                );\n            });\n            return(\n                <div className=\"d-flex scroll-contacts-list\">\n                    <ul className=\"list-group\">\n                        {contactsList}\n                    </ul>\n                </div>\n            );\n        }   \n    }\n}\n\nclass ChatList extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n          isNewContactModalOpen: false,\n          isNewGroupModalOpen: false,\n          \n        }\n        this.toggleNewContactModal = this.toggleNewContactModal.bind(this);\n        this.toggleNewGroupModal = this.toggleNewGroupModal.bind(this);\n        this.removeContact = this.removeContact.bind(this);\n        this.setFriendConversation = this.setFriendConversation.bind(this);\n    }\n\n\n    componentDidMount(){\n        this.props.getContacts(this.props.auth.user.id);\n        this.props.getConversations(this.props.auth.user.id)\n    }\n\n    toggleNewContactModal(){\n        var list = this.props.auth.user.id\n            this.props.contacts.contacts.map((contact) => {\n                list += '-' + contact.id\n            })\n        this.props.getUsers(list);\n        this.setState({\n            isNewContactModalOpen: !this.state.isNewContactModalOpen\n        });\n    }\n\n    toggleNewGroupModal(){\n        this.setState({\n            isNewGroupModalOpen: !this.state.isNewGroupModalOpen\n        });\n    }\n\n    removeContact(contact) {\n        const data = {id_user : this.props.auth.user.id, id_contact : contact}\n        this.props.removeContact(data);\n    }\n\n    setFriendConversation(friend){  \n        \n        let friendId = friend.id;\n            \n        if(this.props.conversations.conversations.length===0){\n            const members = {senderId:this.props.auth.user.id, receiverId: friendId }\n                this.props.createNewConversation(members)  \n                this.props.setCurrentFriendConversation(friend)\n        }else{\n            let found = false;\n            this.props.conversations.conversations.map(conversation => {\n                \n                if(conversation.members.includes(this.props.auth.user.id) && conversation.members.includes(friend.id)){\n                    this.props.setCurrentConversation(conversation._id)\n                    this.props.setCurrentFriendConversation(friend)\n                    found= true;\n                }\n            });   \n            if(!found){\n                const members = {senderId:this.props.auth.user.id, receiverId: friendId }\n                this.props.createNewConversation(members)\n                this.props.setCurrentFriendConversation(friend)\n            }\n        }         \n    }\n\n    render(){\n        return(\n            <React.Fragment>\n                <NewContact isModalOpen={this.state.isNewContactModalOpen} toggleModal={this.toggleNewContactModal} \n                users={this.props.users} /> \n                {/* <NewGroup isModalOpen={this.state.isNewGroupModalOpen} toggleModal={this.toggleNewGroupModal}/> */}\n                <div className=\"row\">\n                    <div className=\"card border-0\">\n                        <div className=\"card-header\">\n                            <div className=\"row\">\n                                {/* <div className=\"col-6 text-center\">\n                                    <span className=\"fa-stack fa-2x\" onClick={this.toggleNewGroupModal}>\n                                        <i className=\"fa fa-circle fa-button fa-stack-2x\"></i>\n                                        <i className=\"fa fa-users fa-stack-1x fa-inverse\"></i>\n                                    </span>\n                                </div> */}\n                                <div className=\"col-12 text-center\" onClick={this.toggleNewContactModal}>\n                                    <span className=\"fa-stack fa-2x\" >\n                                        <i className=\"fa fa-circle fa-button fa-stack-2x\"></i>\n                                        <i className=\"fa fa-user-plus fa-stack-1x fa-inverse\"></i>\n                                    </span>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"card-body extra\">\n                            <div className=\"card\">\n                                <div className=\"card-header text-center\">\n                                    Chats\n                                </div>\n                                <div className=\"card-body\">\n                                    {/*<input type=\"text\" id=\"myInput\" \n                                    placeholder=\"Contact name...\" title=\"Type in a name\" \n                            className=\"form-control mb-1\"/>*/}\n                                    <RenderUsersList contacts={this.props.contacts} removeContact={this.removeContact}\n                                        setFriendConversation= {this.setFriendConversation}/>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nChatList.propTypes = { \n\tauth: PropTypes.object.isRequired, \n\terrors: PropTypes.object.isRequired, \n    contacts : PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({ auth: state.auth, errors: state.errors, contacts: state.contacts, users: state.users, conversations:state.conversations }); \n\nexport default connect(mapStateToProps, { getContacts, getUsers, removeContact, createNewConversation, \n    getConversations, setCurrentConversation, getMessagesConversation, setCurrentFriendConversation })(withRouter(ChatList)); \n\n","import React, { Component } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter,\n     Col, Row, Form, FormGroup, Input, Label } from 'reactstrap';\nimport { connect } from \"react-redux\"; \nimport { withRouter } from 'react-router-dom';\nimport { changePassword } from \"../../redux/actions/actionAuth\";\nimport { cleanErrors } from \"../../redux/actions/actionAuth\";\nimport swal from 'sweetalert';\n\n\nfunction cleanErrorsForDisplay(props){\n\tif (props.old_password){\n\t\treturn props.old_password\n\t}\n\telse if (props.password){\n\t\treturn props.password\n\t}\n\telse if (props.password2){\n\t\treturn props.password2\n\t}\n\telse if (props.emailnotfound){\n\t\treturn props.emailnotfound\n\t}\n}\n\n\n\nclass PasswordModal extends Component {\n\n     constructor(){\n          super();\n          this.state = {\n               old_password : \"\",\n               password: \"\", \n               password2: \"\",  \n               hasChanged : false,\n               errors : false\n          }\n          this.changePassword = this.changePassword.bind(this)\n     }\n\n     onChange = e => { \n\t\tthis.setState({ [e.target.id]: e.target.value }); \n\t};\n\n     componentWillReceiveProps(nextProps){ \n\n          if (Object.keys(nextProps.errors).length !== 0) { \n               var error = cleanErrorsForDisplay(nextProps.errors)\n               swal(\"Error!\", error, \"error\");\n               this.props.cleanErrors();\n               this.setState({\n                    hasChanged : false,\n                    errors : true\n               })\n          }\n     }\n\n     componentDidUpdate(){\n          if (this.state.hasChanged && !this.state.errors)  {\n               swal(\"Success!\", 'Your password has changed', \"success\");\n               this.props.toggleModal();\n               this.setState({\n                    hasChanged : false,\n                    errors : false\n               }) \n          }\n     }\n\n     changePassword(){\n\n          const data = {\n               id : this.props.auth.user.id,\n               old_password : this.state.old_password,\n               password : this.state.password,\n               password2 : this.state.password2\n          }\n          this.props.changePassword(data);\n          this.setState({\n               hasChanged : true\n          })\n     }\n\n     render () {\n          return(\n               <Modal isOpen={this.props.isModalOpen} toggle={this.props.toggleModal}>\n                    <ModalHeader  className=\"modal-header\">\n                         Change Password\n                    </ModalHeader>\n     \n                    <ModalBody  className=\"modal-body\">\n                         <Form className=\"login100-form\" noValidate>\n                              <Row className=\"form-group\">\n                                   <Col md={12} className=\"wrap-input100\">\n                                        <FormGroup>\n                                             <Label>Old Password</Label>\n                                             <Input type=\"password\" id=\"old_password\"\n                                                  placeholder=\"\" \n                                                  className=\"input100\" \n                                                  onChange={this.onChange} \n                                             />\n                                             <span className=\"focus-input100\"></span>\n                                        </FormGroup>\n                                        <FormGroup className=\"mt-4\">\n                                             <Label>New Password</Label>\n                                             <Input type=\"password\" id=\"password\"\n                                                  placeholder=\"\" \n                                                  className=\"input100\" \n                                                  onChange={this.onChange} \n                                             />\n                                             <span className=\"focus-input100\"></span>\n                                        </FormGroup>\n                                        <FormGroup className=\"mt-4\">\n                                             <Label>Confirm New Password</Label>\n                                             <Input type=\"password\" id=\"password2\"\n                                                  placeholder=\"\" \n                                                  className=\"input100\" \n                                                  onChange={this.onChange} \n                                             />\n                                             <span className=\"focus-input100\"></span>\n                                        </FormGroup>\n                                   </Col>\n                              </Row>\n                         </Form>\n                    </ModalBody>\n                    <ModalFooter>\n                         <Button color=\"primary\" onClick={this.changePassword}>Change Password</Button>\n                         <Button color=\"secondary\" onClick={this.props.toggleModal}>Cancel</Button>\n                    </ModalFooter>\n               </Modal>\n          )\n     }     \n}\nconst mapStateToProps = (state) => ({ auth: state.auth, errors: state.errors }); \n\nexport default connect(mapStateToProps, { changePassword, cleanErrors })(withRouter(PasswordModal)); ","import React, {useState} from 'react'\nimport {MuiPickersUtilsProvider} from '@material-ui/pickers'\nimport DateFnsUtils from '@date-io/date-fns'\nimport {TimePicker} from '@material-ui/pickers'\n\n\nconst DateTime = () => {\n\n     const [TimeCommence, TimeSelectC] = useState(new Date());\n     const [TimeFinish, TimeSelectF] = useState(new Date());\n\n     return(\n          <div className=\"container-fluid g-lg-2\">\n               <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <div className=\"row g-2\">\n\n                    <label class=\"reloj\">Since</label>\n                         <div className=\"col-md-12\">\n\n                              <TimePicker value={TimeCommence} onChange={TimeSelectC} />\n                         </div>\n\n                    <label class=\"reloj\">Until</label>\n                         <div className=\"col-md-12\">\n\n                              <TimePicker value={TimeFinish} onChange={TimeSelectF} />\n                         </div>\n                    </div>\n               </MuiPickersUtilsProvider>\n          </div>\n     )\n}\n\nexport default DateTime\n","import React, {Component} from 'react'\nimport PasswordModal from '../modals/PasswordModalComponent'\nimport DateTime from './DateTime'\n\n\nclass UserSetup extends Component {\n\n     constructor(props){\n          super(props)\n          this.state = {\n            isPasswordModalOpen: false\n          }\n          this.togglePasswordModal = this.togglePasswordModal.bind(this);\n      }\n  \n     togglePasswordModal(){\n          this.setState({\n               isPasswordModalOpen: !this.state.isPasswordModalOpen\n          });\n      }\n\n     render(){\n          return (\n               <div className=\"container scroll-modal\">\n                    <PasswordModal isModalOpen={this.state.isPasswordModalOpen} toggleModal={this.togglePasswordModal} />\n                    <div className=\"row robot-container\">\n                         <div className=\"col-md-12 col-12 mt-5 text-center\">\n                              <h2 className=\"TitlePass\">ROBOT</h2>\n                              <br />\n                              <div className=\"mt-4\">\n                                   <DateTime/>\n                              </div>\n                              <br />\n                              <textarea className=\"form-control\"></textarea>\n                              <div className=\"form-check mt-2 text-left\">\n                                   <input type=\"checkbox\" className=\"form-check-input\" readOnly/>\n                                   <label className=\"form-check-label\">Automatic Answer</label>\n                              </div>\n                              <br />\n                              <p>Available soon!</p>\n                              {/*<button className=\"btn btn-primary mt-3\" type=\"submit\">Program</button>*/}\n                              <hr></hr>\n                         </div>\n                         <div className=\"col-md-12 col-12 mt-5 text-center\">\n                              <span className=\"fa-stack fa-2x\" onClick={this.togglePasswordModal}>\n                                   <i className=\"fa fa-circle fa-button fa-stack-2x\"></i>\n                                   <i className=\"fa fa-user-secret fa-stack-1x fa-inverse\"></i>\n                              </span>\n                         </div>\n                    </div>\n               </div>\n          )\n     }\n}\n\nexport default UserSetup\n","import React, { useState, useRef, useEffect } from 'react'\nimport './dragImage.scss'\n\n\nexport const DragImage = ({setMedia, setLoading}) => {\n\n    const [error, setError] = useState(null);\n    const [messageError, setMessageError] = useState('');\n    const [classDrag, setClassDrag] = useState('drag__image');\n    const [image, setImage] = useState(null);\n    const [file, setFile] = useState(null);\n\n    const typeImages = ['image/png', 'image/jpeg', 'image/jpg'];\n\n    const refInputFile = useRef(null);\n\n    const selectImage = () => {\n        refInputFile.current.click()\n    }\n\n    const isImageValid = (file) => {\n        if(file && typeImages.includes(file.type)){\n            setError(false);\n            return true;\n        }else{\n            setError(true)\n            setMessageError('File is incorrect');\n            setImage('')\n            return false\n        }\n    }\n\n    const showImage = (file) => {\n        const fileReader = new FileReader();\n        fileReader.readAsDataURL(file);\n\n        fileReader.addEventListener('load', (e) => {\n            setImage(e.target.result);\n        })\n        setFile(file);\n        // save file for share to the father\n        setMedia(file)\n    }\n\n    const upLoadImage = (e) =>{\n        const files = e.target.files;\n        const file = files[0];\n\n        const valid = isImageValid(file)\n\n        if(valid){\n            showImage(file)\n        }else{\n            setFile(null)\n        }\n\n        showImage(file);\n        \n    }\n\n    const addImage = (e) => {\n        e.preventDefault()\n\n        refInputFile.current.files = e.dataTransfer.files\n        const file = refInputFile.current.files[0]\n\n        const valid = isImageValid(file)\n\n        if(valid){\n            showImage(file)\n        }else{\n            setError(true)\n            setMessageError('File is incorrect');\n            return false\n        }\n\n        showImage(file);\n    }\n\n    const handleSave = () => {\n        const valid = isImageValid(file)\n\n        if (valid && file){\n            setLoading(true);\n        } else{\n            setError(true)\n            setMessageError('First, upload an image')\n        }\n\n    }\n\n\n    // const { docs } = useFirestore('images');\n    // console.log(docs)\n\n    useEffect(() => {\n\n        setTimeout(() => {\n            setError(false)\n        }, 5000)      \n    },[error])\n\n    return (\n        <div className='drag'>\n            <h2 className='drag__title'>Upload your image</h2>\n            <div className='drag__info'>File shoul be JPEG or PNG</div>\n\n            {error && <div className='drag__message'>{messageError}</div>}\n\n            <input type='file' name='file' ref={refInputFile} onChange={upLoadImage}/>\n            <div \n                className={classDrag} onDragOver={(e) => \n                {e.preventDefault()\n                setClassDrag('drag__image active')}}\n                \n                onDragLeave={(e) => \n                    {e.preventDefault()\n                    setClassDrag('drag__image')}}\n                    \n                onClick={selectImage}\n\n                onDrop={addImage}\n\n                >\n\n                <img src={image} alt='' className='graf__image--preview'/>\n                <span className='drag__image--message'>\n                    Click or Drag & Drop your image here.\n                </span>\n            </div>\n\n            <button className='drag__action' onClick={handleSave}>Save image</button>\n\n        </div>\n    )\n}\n","import firebase from 'firebase/app'\nimport 'firebase/storage'\nimport 'firebase/firestore'\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n    apiKey: \"AIzaSyCz452laVh_CFOSsL94Xnq8fV05fvVsH1Y\",\n    authDomain: \"slider-react-ea3d9.firebaseapp.com\",\n    projectId: \"slider-react-ea3d9\",\n    storageBucket: \"slider-react-ea3d9.appspot.com\",\n    messagingSenderId: \"606699125537\",\n    appId: \"1:606699125537:web:b8bac4ef7989f94ea35c60\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\n  const fbStorage = firebase.storage()\n  const fbFirestore = firebase.firestore()\n  const timeStamp = firebase.firestore.FieldValue.serverTimestamp\n\n  export {fbStorage, fbFirestore, timeStamp}","import { useState, useEffect } from 'react'\nimport { fbStorage, fbFirestore, timeStamp } from '../services/firebase'\n\nconst useStorage = (file) => {\n\tconst [progress, setProgress] = useState(0)\n\tconst [error, setError] = useState(null)\n\tconst [url, setUrl] = useState(null)\n\n\t// useEffect se ejecutara cada vez que file cambie de valor\n\tuseEffect(() => {\n\t\t// references\n\t\tconst storageRef = fbStorage.ref(file.name)\n\t\tconst collectionRef = fbFirestore.collection('images')\n\n\t\t// subimos la imagen, suceden ciertas cosas\n\t\tstorageRef.put(file).on(\n\t\t\t'state_changed',\n\t\t\t(snap) => {\n\t\t\t\tlet percentage = (snap.bytesTransferred / snap.totalBytes) * 100\n\t\t\t\tsetProgress(percentage)\n\t\t\t},\n\t\t\t(err) => {\n\t\t\t\tsetError(err)\n\t\t\t},\n\t\t\tasync () => {\n\t\t\t\tconst url = await storageRef.getDownloadURL()\n\t\t\t\tconst createdAt = timeStamp()\n\t\t\t\tcollectionRef.add({ url, createdAt })\n\t\t\t\tsetUrl(url)\n\t\t\t}\n\t\t)\n\t}, [file])\n\n\treturn { progress, url, error }\n}\n\nexport default useStorage\n","import React, {useEffect} from 'react'\nimport { motion } from 'framer-motion'\nimport useStorage from '../../Hooks/useStorage'\nimport './LoaderImage.scss'\n\nexport const LoaderImage = ({file, setFile, setLoading, setUrl }) => {\n    \n    const {url, progress} = useStorage(file)\n\n    useEffect(() =>{\n        if(url){\n            setFile(null)\n            setLoading(false)\n            setUrl(url)\n        }\n    },[url, setFile, setLoading, setUrl])\n    \n    return (\n\n        <div className=\"loader\">\n            <h3 className=\"loader__title\"> Uploading... </h3>\n\n            <div className=\"loader__progress\">\n                <motion.div initial={{width: 0}} \n                animate={{width:progress + '%'}}\n                className=\"loader__progress--bar\"></motion.div>\n            </div>\n        </div>\n\n    )\n    \n}\n","import React, {useState, useEffect} from 'react'\nimport { DragImage } from './DragImage';\nimport { LoaderImage } from './LoaderImage';\n\nexport const Uploader = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [file, setFile] = useState(null);\n    const [valueURL, setUrl] = useState(null);\n\n    useEffect(() =>{\n        if(valueURL){\n            props.setUrl(valueURL)      \n        }\n    },[valueURL])\n\n    return(\n        <section className=\"uploader\">\n            {loading ? (<LoaderImage file={file} setFile={setFile} setUrl={setUrl} setLoading={setLoading} />)\n            :\n            (<DragImage setMedia={setFile} setLoading={setLoading}/>)}\n        </section>\n    )\n}\n","import React, { Component } from 'react'\nimport UserRobot from '../comp_config/UserRobot'\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter,\n     Col, Row, Form, Input  } from 'reactstrap';\nimport { } from 'reactstrap';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\"; \nimport { withRouter } from 'react-router-dom';\nimport { Uploader } from '../Uploader/Uploader';\nimport { updateUser, changeImage } from '../../redux/actions/actionAuth';\n\n\nfunction DisplayUserImage(props){\n     console.log('in')\n     return(\n          <img src={props.image !== '' ? props.image : 'images/profile_dummy.png'} className='miniature-profile-image' alt=\"profile img\" \n                /> \n     )\n}\n\nclass Configuration extends Component {\n\n     constructor(){\n          super();\n          this.state = {\n               name : \"\",\n               lastname : \"\",\n               nickname: \"\", \n               phone: \"\", \n               github : \"\",\n               instagram : \"\",\n               twitter: \"\",\n               linkedin: \"\",\n               url: \"\",\n               errors: {},\n               isChangingImage : false\n          }\n          this.updateUser = this.updateUser.bind(this)\n          this.setUrl = this.setUrl.bind(this)\n          this.changeProfileImage = this.changeProfileImage.bind(this)\n     }\n\n     setUrl=(valueUrl)=>{\n         this.setState({url:valueUrl})\n\t};\n\n     handleName=(e)=>{\n          this.setState({name: e.target.value})\n     };\n     handleLastName=(e)=>{\n          this.setState({lastname: e.target.value})\n     };\n     handleNickName=(e)=>{\n          this.setState({nickname: e.target.value})\n     };\n     handlePhone=(e)=>{\n          this.setState({phone: e.target.value})\n     };\n     handleGithub=(e)=>{\n          this.setState({github: e.target.value})\n     };\n     handleInstagram=(e)=>{\n          this.setState({instagram: e.target.value})\n     };\n     handleTwitter=(e)=>{\n          this.setState({twitter: e.target.value})\n     };\n     handleLinkeding=(e)=>{\n          this.setState({linkedin: e.target.value})\n     }\n\n     updateUser() {\n\n\t\tconst userData = {\n               id_user : this.props.auth.user.id,\n\t\t\tname: this.state.name, \n\t\t\tlastname: this.state.lastname, \n               nickname: this.state.nickname,\n               phone: this.state.phone,\n               image: this.state.url,\n               github: this.state.github,\n               instagram: this.state.instagram,\n               twitter: this.state.twitter,\n               linkedin: this.state.linkedin,\n               \n\t\t};\n\n          const claves = Object.keys(userData);\n    \n           for(let i = 0; i < claves.length ; i++){\n                if (userData[claves[i]] === \"\"){\n                     userData[claves[i]]=this.props.auth.user[claves[i]]\n                }\n           }\n\n\t\tthis.props.updateUser(userData); \n          this.props.toggleModal();\n\t}\n\n     changeProfileImage(){\n          this.setState({\n               isChangingImage : !this.state.isChangingImage\n          })\n     }\n\n     componentDidUpdate(){\n          if (this.state.url !== ''){\n               this.props.changeImage({\n                    url : this.state.url,\n                    user_id : this.props.auth.user.id\n               });\n               this.setState({\n                    url : ''\n               })\n          } \n     }\n\n     render(){\n\n          return (\n\n               <Modal isOpen={this.props.isModalOpen} toggle={this.props.toggleModal} size='lg'>\n                    <ModalHeader>Configuration</ModalHeader>\n                    <ModalBody>\n                         <div className=\"container-fluid\">\n                              <div className=\"row\">\n                                   <div className=\"col-md-5 col-12 mb-md-1\">\n                                         <UserRobot/> \n                                   </div>\n                                   <div className=\"col-md-7 col-12 mt-1 mr-4\">\n                                        <div className=\"row justify-content-center\">\n                                             {this.state.isChangingImage === true ? <Uploader setUrl={this.setUrl} />\n                                             : <DisplayUserImage image={this.props.auth.user.image} />}\n                                             <hr />\n                                             <span className=\"fa-stack fa-2x mb-4\" onClick={this.changeProfileImage}>\n                                                  <i className=\"fa fa-circle fa-button fa-stack-2x\"></i>\n                                                  <i className=\"fa fa-id-badge fa-stack-1x fa-inverse\"></i>\n                                             </span>\n                                        </div>\n                                        <div className=\"row scroll-update-profile-modal justify-content-center\">\n                                             <Form className=\"login100-form\" noValidate onSubmit={this.onSubmit}>\n                                                  <Row className=\"form-group text-center\">\n                                                       <Col md={12} className=\"wrap-input100\">\n                                                            <Input id=\"name\"\n                                                                 type=\"text\"\n                                                                 name=\"name\"\n                                                                 placeholder={this.props.auth.user.name}\n                                                                 className=\"input100\" \n                                                                 value={this.state.name} \n                                                                 onChange={this.handleName} \n                                                            />\n                                                            <span className=\"focus-input100\"></span>\n                                                            <span className=\"symbol-input100\">\n                                                                 <i className=\"fa fa-user\"></i>\n                                                            </span>\n                                                       </Col>\n                                                       <Col md={12} className=\"wrap-input100\">\n                                                            <Input id=\"lastname\" \n                                                                 placeholder={this.props.auth.user.lastname} \n                                                                 className=\"input100\" \n                                                                 onChange={this.handleLastName} \n                                                                 value={this.state.lastname} \n                                                            />\n                                                            <span className=\"focus-input100\"></span>\n                                                            <span className=\"symbol-input100\">\n                                                                 <i className=\"fa fa-user\"></i>\n                                                            </span>\n                                                       </Col>\n                                                       <Col md={12} className=\"wrap-input100\">\n                                                            <Input id=\"nickname\" \n                                                                 type=\"text\"\n                                                                 placeholder={this.props.auth.user.nickname} \n                                                                 className=\"input100\" \n                                                                 \n                                                                 value={this.state.nickname} \n                                                                 onChange={this.handleNickName} \n                                                            />\n                                                            <span className=\"focus-input100\"></span>\n                                                            <span className=\"symbol-input100\">\n                                                                 <i className=\"fa fa-user\"></i>\n                                                            </span>\n                                                       </Col>\n                                                       <Col md={12} className=\"wrap-input100\">\n                                                            <Input id=\"phone\" \n                                                                 placeholder={this.props.auth.user.phone} \n                                                                 className=\"input100\" \n                                                                 onChange={this.handlePhone} \n                                                                 value={this.state.phone} \n                                                            />\n                                                            <span className=\"focus-input100\"></span>\n                                                            <span className=\"symbol-input100\">\n                                                                 <i className=\"fa fa-phone\"></i>\n                                                            </span>\n                                                       </Col>\n                                                       <Col md={12} className=\"wrap-input100\">\n                                                            <Input id=\"github\" \n                                                                 placeholder={this.props.auth.user.github} \n                                                                 className=\"input100\" \n                                                                 onChange={this.handleGithub} \n                                                                 value={this.state.github} \n                                                            />\n                                                            <span className=\"focus-input100\"></span>\n                                                            <span className=\"symbol-input100\">\n                                                                 <i className=\"fa fa-github\"></i>\n                                                            </span>\n                                                       </Col>\n                                                       <Col md={12} className=\"wrap-input100\">\n                                                            <Input id=\"instagram\" \n                                                                 placeholder={this.props.auth.user.instagram} \n                                                                 className=\"input100\" \n                                                                 onChange={this.handleInstagram} \n                                                                 value={this.state.instagram} \n                                                            />\n                                                            <span className=\"focus-input100\"></span>\n                                                            <span className=\"symbol-input100\">\n                                                                 <i className=\"fa fa-instagram\"></i>\n                                                            </span>\n                                                       </Col>\n                                                       <Col md={12} className=\"wrap-input100\">\n                                                            <Input id=\"twitter\" \n                                                                 placeholder={this.props.auth.user.twitter} \n                                                                 className=\"input100\" \n                                                                 onChange={this.handleTwitter} \n                                                                 value={this.state.twitter} \n                                                            />\n                                                            <span className=\"focus-input100\"></span>\n                                                            <span className=\"symbol-input100\">\n                                                                 <i className=\"fa fa-twitter\"></i>\n                                                            </span>\n                                                       </Col>\n                                                       <Col md={12} className=\"wrap-input100\">\n                                                            <Input id=\"linkedin\" \n                                                                 placeholder={this.props.auth.user.linkedin} \n                                                                 className=\"input100\" \n                                                                 onChange={this.handleLinkeding} \n                                                                 value={this.state.linkedin} \n                                                            />\n                                                            <span className=\"focus-input100\"></span>\n                                                            <span className=\"symbol-input100\">\n                                                                 <i className=\"fa fa-linkedin\"></i>\n                                                            </span>\n                                                       </Col>\n                                                  </Row>\n                                             </Form>\n                                        </div>\n                                   </div>\n                              </div>\n                         </div>\n                    </ModalBody>\n                    <ModalFooter>\n                         <Button color=\"primary\" onClick={this.updateUser}>Update</Button>{' '}\n                         <Button color=\"secondary\" onClick={this.props.toggleModal}>Cancel</Button>\n                    </ModalFooter>\n               </Modal>\n          )\n     }\n}\n\nConfiguration.propTypes = { \n\tauth: PropTypes.object.isRequired, \n\terrors: PropTypes.object.isRequired, \n};\n\nconst mapStateToProps = (state) => ({ auth: state.auth, errors: state.errors }); \n\nexport default connect(mapStateToProps, { updateUser, changeImage })(withRouter(Configuration)); \n","import { Component } from 'react'\nimport Configuration from '../modals/ConfigurationModalComponent';\n\n\nfunction capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n\nclass MiniatureProfileSummary extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n          isConfigurationModalOpen: false\n        }\n        this.toggleConfigurationtModal = this.toggleConfigurationtModal.bind(this);\n    }\n\n    toggleConfigurationtModal(){\n        this.setState({\n          isConfigurationModalOpen: !this.state.isConfigurationModalOpen\n        });\n    }\n    render(){\n      return (\n          <div className=\"container\">\n             <Configuration isModalOpen={this.state.isConfigurationModalOpen} toggleModal={this.toggleConfigurationtModal} /> \n            <div className=\"row justify-content-center mt-4\">\n                <img src={this.props.user.image !== '' ? this.props.user.image : 'images/profile_dummy.png'} className='miniature-profile-image' alt=\"profile img\" \n                  /> \n            </div>                     \n            <div className=\"row justify-content-center mt-4 nickname-title\">\n              {capitalizeFirstLetter(this.props.user.nickname)}    \n            </div>    \n            <div className=\"row justify-content-center\">\n              <span className=\"fa-stack fa-2x\" onClick={this.toggleConfigurationtModal}>\n                  <i className=\"fa fa-circle fa-button fa-stack-2x\"></i>\n                  <i className=\"fa fa-cogs fa-stack-1x fa-inverse\"></i>\n              </span>\n            </div>\n          </div>\n      )    \n    }\n    \n}\n\nexport default MiniatureProfileSummary;","import React, { Component } from \"react\";\nimport Chat from './chat/Chat'\nimport ChatList from \"./chats_list/ChatsListComponent\";\nimport MiniatureProfileSummary from \"./miniature_profile/MiniatureProfileSummaryComponent\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\"; \nimport { withRouter } from 'react-router-dom';\n\nclass ChatApp extends Component {\n\n    constructor(){\n        super();\n\t\tthis.state = {\n\t\t\terrors: {}\n\t\t}\n    }\n\n    render(){\n        return(\n            <div className=\"row app-container\">\n                <div className=\"col-3\">\n                    <div className=\"row\">\n                        <div className=\"miniature-profile-summary\">\n                            <MiniatureProfileSummary user={this.props.auth.user}/> \n                        </div>\n                    </div>\n                    <div className=\"border mt-4\">\n                        <ChatList />\n                    </div>\n                </div>\n                <div className=\"col-9\">\n                    <Chat /> \n                </div>\n            </div>\n        );\n    }\n}\n\nChatApp.propTypes = { \n\tauth: PropTypes.object.isRequired, \n\terrors: PropTypes.object.isRequired, \n};\n\nconst mapStateToProps = (state) => ({ auth: state.auth, errors: state.errors }); \n\nexport default connect(mapStateToProps)(withRouter(ChatApp)); \n","import React from \"react\"; \nimport { Route, Redirect } from \"react-router-dom\"; \nimport { connect } from \"react-redux\"; \nimport PropTypes from \"prop-types\"; \n\n\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => ( \n    <Route {...rest} \n        render={\n            (props) => auth.isAuthenticated === true ? ( <Component {...props} /> ) : ( <Redirect to=\"/sign-in\" /> ) \n        } \n    /> \n); \n\nPrivateRoute.propTypes = { \n    auth: PropTypes.object.isRequired, \n}; \n\nconst mapStateToProps = (state) => ({ \n    auth: state.auth, \n}); \n\nexport default connect(mapStateToProps)(PrivateRoute);","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from \"prop-types\";\nimport { logoutUser } from \"../redux/actions/actionAuth\";\nimport { connect } from \"react-redux\"; \nimport { withRouter } from 'react-router-dom';\n\n\nfunction ReturnNavElements(props){\n  if (!props.isAuthenticated){\n    return(\n      <React.Fragment>\n        <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/sign-in\">Sign in</Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/sign-up\">Sign up</Link>\n        </li>\n      </React.Fragment>\n    );\n  }\n  else{\n    return(\n      <li className=\"nav-item\">\n        <Link className=\"nav-link\" to=\"/sign-in\" onClick={props.logOut}>Sign Out</Link>\n      </li>\n    );\n  }\n}\n\n\nclass Header extends Component{\n\n  onLogoutClick = (e) => { \n    e.preventDefault(); \n    this.props.logoutUser(); \n  };\n\n  render(){\n    return (\n      <div className=\"Header\">\n        <nav className=\"navbar navbar-expand-lg navbar-light fixed-top\">\n          <div className=\"container\">\n            <Link className=\"navbar-brand\" to={\"/\"}>Chatting App</Link>\n              <ul className=\"navbar-nav\">\n                <ReturnNavElements isAuthenticated={this.props.auth.isAuthenticated} logOut={this.props.logoutUser}/>\n              </ul>\n          </div>\n        </nav>\n      </div>\n    );\n  }\n}\n\nHeader.propTypes = { \n\tlogoutUser: PropTypes.func.isRequired, \n\tauth: PropTypes.object.isRequired, \n\terrors: PropTypes.object.isRequired, \n};\n\nconst mapStateToProps = (state) => ({ auth: state.auth, errors: state.errors }); \n\nexport default connect(mapStateToProps, { logoutUser })(withRouter(Header)); ","import { PASSWORD_CHANGED, SET_CURRENT_USER, USER_LOADING } from \"../actions/actionTypes\"; \nconst isEmpty = require(\"is-empty\");\n\nconst initialState = { \n    isAuthenticated: false, \n    user: {}, \n    loading: false,\n}; \nexport default function(state = initialState, action) { \n    switch (action.type) { \n        case SET_CURRENT_USER: \n            return { \n                ...state, \n                isAuthenticated: !isEmpty(action.payload), \n                user: action.payload \n            }; \n        case USER_LOADING: \n            return { \n                ...state, \n                loading: true \n            }; \n        case PASSWORD_CHANGED:\n            return state\n        default: \n            return state; \n    } \n  }","import { GET_ERRORS, CLEAN_ERRORS } from \"../actions/actionTypes\"; \n\nconst initialState = {}; \n\nexport default function(state = initialState, action) { \n    switch (action.type) { \n        case GET_ERRORS: \n            return action.payload; \n        case CLEAN_ERRORS:\n            return {}\n        default: \n            return state; \n    } \n} ","import { UPDATE_CONTACTS, CONTACTS_LOADING, CLEAN_CONTACTS } from \"../actions/actionTypes\";\n\nconst initialState = {\n    contacts : [],\n    isLoading : false\n}; \n\nexport default function(state = initialState, action) { \n    switch (action.type) { \n        case UPDATE_CONTACTS: \n            return {\n                contacts : action.payload,\n                isLoading : false\n            }\n        case CONTACTS_LOADING:\n            return {\n                contacts : [],\n                isLoading : true\n            }\n        case CLEAN_CONTACTS:\n            return {\n                contacts : [],\n                isLoading : false\n            }\n        default: \n            return state; \n    } \n  }","import { GET_USERS, CLEAN_USERS } from \"../actions/actionTypes\"; \n\nconst initialState = []; \n\nexport default function(state = initialState, action) { \n    switch (action.type) { \n        case GET_USERS: \n            return action.payload; \n        case CLEAN_USERS:\n            return []\n        default: \n            return state; \n    } \n} ","import {CLEAN_CONVERSATIONS, CREATE_NEW_CONVERSATION, SET_CURRENT_CONVERSATION, UPDATE_CONVERSATIONS,\n    UPDATE_FRIEND_CURRENT_CONVERSATION} from \"../actions/actionTypes\";\n\nconst initialState = {\n    currentConversation: null,\n    currentConversationFriend : null,\n    conversations : [],\n}; \n\nexport default function(state = initialState, action) { \n    switch (action.type) { \n        case CREATE_NEW_CONVERSATION: \n            return {\n                ...state,\n                currentConversation : action.payload,\n            }\n     \n        case SET_CURRENT_CONVERSATION:\n            return {\n                ...state,\n                currentConversation : action.payload,\n            }\n        case UPDATE_CONVERSATIONS:\n            return {\n                ...state,\n                conversations : action.payload,\n            }\n        case UPDATE_FRIEND_CURRENT_CONVERSATION:\n            return {\n                ...state,\n                currentConversationFriend : action.payload\n            }\n        case CLEAN_CONVERSATIONS:\n            return {\n                currentConversation: null,\n                currentConversationFriend : null,\n                conversations : [],\n            }\n        default: \n            return state; \n    } \n  }","import { combineReducers } from \"redux\"; \nimport authReducer from \"./authReducer\"; \nimport errorReducer from \"./errorReducer\"; \nimport contactsReducer from \"./contactsReducer\";\nimport usersReducer from './usersReducer';\nimport conversationsReducer from './conversationsReducer'\nimport messagesReducer from \"./messagesReducer\";\n\nexport default combineReducers({ \n    auth: authReducer, \n    errors: errorReducer,\n    contacts: contactsReducer,\n    users: usersReducer,\n    conversations: conversationsReducer,\n    messages:messagesReducer\n});","import { UPDATE_MESSAGES, AFTER_POST_MESSAGE, CLEAN_MESSAGES } from '../actions/actionTypes';\n \nexport default function(state={},action){\n    switch(action.type){\n        case UPDATE_MESSAGES:\n                return {\n                    ...state,\n                    messages : action.payload,\n                }\n        case AFTER_POST_MESSAGE:\n                return {...state, messages: state.messages.concat(action.payload) }\n        case CLEAN_MESSAGES:\n            return {}\n        default:\n            return state;\n    }\n}","import { createStore, applyMiddleware, compose } from \"redux\"; \nimport thunk from \"redux-thunk\"; \nimport logger from 'redux-logger'\nimport rootReducer from \"./reducers\"; \n\nconst initialState = {}; \nconst middleware = [thunk]; \n\nconst store = createStore( \n    rootReducer, \n    initialState, \n    compose( \n        applyMiddleware(...middleware)\n    ) \n); \nexport default store;","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\"; \nimport setAuthToken from \"./redux/utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./redux/actions/actionAuth\";\nimport Register from './components/auth/RegisterComponent'\nimport Login from './components/auth/LoginComponent'\nimport ChatApp from './components/ChatAppComponent'\nimport PrivateRoute from './components/private-route/PrivateRouteComponent'; \nimport Header from './components/HeaderComponent';\nimport './App.css';\nimport './Utils.css'\nimport { Provider } from 'react-redux';\nimport store from './redux/store'\n\n\n// Check for token to keep user logged in \nif (localStorage.jwtToken) { \n    // Set auth token header auth \n    const token = localStorage.jwtToken; \n    setAuthToken(token); \n    // Decode token and get user info and exp \n    const decoded = jwt_decode(token); \n    // Set user and isAuthenticated \n    store.dispatch(setCurrentUser(decoded)); \n    // Check for expired token \n    const currentTime = Date.now() / 1000; // to get in milliseconds\n    if (decoded.exp < currentTime) { \n        // Logout user \n        store.dispatch(logoutUser()); \n        // Redirect to login \n        window.location.href = \"./sign-in\"; \n    } \n} \n\nclass App extends Component { \n    render() { \n        return ( \n            <Provider store={store}> \n                <Router> \n                <div className=\"App\"> \n                    <Header /> \n                    <Route exact path=\"/\" component={Login} /> \n                    <Route exact path=\"/sign-up\" component={Register} /> \n                    <Route path=\"/sign-in\" component={Login} /> \n                    <Switch> \n                        <PrivateRoute exact path=\"/app\" component={ChatApp}></PrivateRoute> \n                    </Switch> \n                </div> \n                </Router> \n            </Provider> \n        ); \n    } \n} \nexport default App;\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n//import 'bootstrap-social/bootstrap-social.css';\nimport 'font-awesome/css/font-awesome.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}